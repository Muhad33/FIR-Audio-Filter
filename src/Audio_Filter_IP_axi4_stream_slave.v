// -------------------------------------------------------------
// 
// File Name: hdl_prj\hdlsrc\hdlcoder_audio_filter_biquad\Audio_Filter_IP_axi4_stream_slave.v
// Created: 2024-11-07 11:08:52
// 
// Generated by MATLAB 24.2, HDL Coder 24.2, and Simulink 24.2
// 
// -------------------------------------------------------------


// -------------------------------------------------------------
// 
// Module: Audio_Filter_IP_axi4_stream_slave
// Source Path: Audio_Filter_IP/Audio_Filter_IP_axi4_stream_slave
// Hierarchy Level: 1
// 
// -------------------------------------------------------------

`timescale 1 ns / 1 ns

module Audio_Filter_IP_axi4_stream_slave
          (clk,
           reset,
           enb,
           AXI4_Stream_Slave_TDATA,
           AXI4_Stream_Slave_TVALID,
           auto_ready,
           AXI4_Stream_Slave_TREADY,
           user_data,
           user_valid);


  input   clk;
  input   reset;
  input   enb;
  input   [47:0] AXI4_Stream_Slave_TDATA;  // ufix48
  input   AXI4_Stream_Slave_TVALID;  // ufix1
  input   auto_ready;  // ufix1
  output  AXI4_Stream_Slave_TREADY;  // ufix1
  output  [47:0] user_data;  // ufix48
  output  user_valid;  // ufix1


  reg  fifo_rd_ack;  // ufix1
  wire [47:0] stream_in_fifo_user_data;  // ufix48
  wire fifo_empty;  // ufix1
  wire fifo_full;  // ufix1
  wire fifo_empty_neg;  // ufix1
  wire stream_in_user_valid;  // ufix1


  always @(posedge clk)
    begin : intdelay_process
      if (reset == 1'b1) begin
        fifo_rd_ack <= 1'b0;
      end
      else begin
        if (enb) begin
          fifo_rd_ack <= auto_ready;
        end
      end
    end

  Audio_Filter_IP_fifo_data u_Audio_Filter_IP_fifo_data_inst (.clk(clk),
                                                              .reset(reset),
                                                              .enb(enb),
                                                              .In(AXI4_Stream_Slave_TDATA),  // ufix48
                                                              .Push(AXI4_Stream_Slave_TVALID),  // ufix1
                                                              .Pop(fifo_rd_ack),  // ufix1
                                                              .Out(stream_in_fifo_user_data),  // ufix48
                                                              .Empty(fifo_empty),  // ufix1
                                                              .Full(fifo_full)  // ufix1
                                                              );

  assign AXI4_Stream_Slave_TREADY =  ~ fifo_full;

  assign user_data = stream_in_fifo_user_data;

  assign fifo_empty_neg =  ~ fifo_empty;

  assign stream_in_user_valid = fifo_empty_neg & fifo_rd_ack;

  assign user_valid = stream_in_user_valid;

endmodule  // Audio_Filter_IP_axi4_stream_slave

