// -------------------------------------------------------------
// 
// File Name: hdl_prj\hdlsrc\hdlcoder_audio_filter_biquad\Audio_Filter_IP_axi4_stream_master.v
// Created: 2024-11-07 11:08:52
// 
// Generated by MATLAB 24.2, HDL Coder 24.2, and Simulink 24.2
// 
// -------------------------------------------------------------


// -------------------------------------------------------------
// 
// Module: Audio_Filter_IP_axi4_stream_master
// Source Path: Audio_Filter_IP/Audio_Filter_IP_axi4_stream_master
// Hierarchy Level: 1
// 
// -------------------------------------------------------------

`timescale 1 ns / 1 ns

module Audio_Filter_IP_axi4_stream_master
          (clk,
           reset,
           enb,
           AXI4_Stream_Master_TREADY,
           user_data,
           user_valid,
           write_packet_size_axi4_stream_master,
           AXI4_Stream_Master_TDATA,
           AXI4_Stream_Master_TVALID,
           AXI4_Stream_Master_TLAST,
           auto_ready);


  input   clk;
  input   reset;
  input   enb;
  input   AXI4_Stream_Master_TREADY;  // ufix1
  input   [47:0] user_data;  // ufix48
  input   user_valid;  // ufix1
  input   [31:0] write_packet_size_axi4_stream_master;  // ufix32
  output  [47:0] AXI4_Stream_Master_TDATA;  // ufix48
  output  AXI4_Stream_Master_TVALID;  // ufix1
  output  AXI4_Stream_Master_TLAST;  // ufix1
  output  auto_ready;  // ufix1


  wire fifo_afull_data;  // ufix1
  wire internal_ready;  // ufix1
  reg  internal_ready_delayed;  // ufix1
  wire fifo_push;  // ufix1
  wire fifo_empty_data;  // ufix1
  wire [31:0] const_1;  // ufix32
  wire [31:0] tlast_size_value;  // ufix32
  wire reg_packet_size_strobe;  // ufix1
  wire auto_tlast;  // ufix1
  wire reset_TLAST;  // ufix1
  reg [31:0] tlast_counter_out;  // ufix32
  wire tlast_rel_out;  // ufix1


  assign internal_ready =  ~ fifo_afull_data;

  always @(posedge clk)
    begin : intdelay_process
      if (reset == 1'b1) begin
        internal_ready_delayed <= 1'b0;
      end
      else begin
        if (enb) begin
          internal_ready_delayed <= internal_ready;
        end
      end
    end

  assign fifo_push = internal_ready_delayed & user_valid;

  Audio_Filter_IP_fifo_data_OUT u_Audio_Filter_IP_fifo_data_OUT_inst (.clk(clk),
                                                                      .reset(reset),
                                                                      .enb(enb),
                                                                      .In(user_data),  // ufix48
                                                                      .Push(fifo_push),  // ufix1
                                                                      .Pop(AXI4_Stream_Master_TREADY),  // ufix1
                                                                      .Out(AXI4_Stream_Master_TDATA),  // ufix48
                                                                      .Empty(fifo_empty_data),  // ufix1
                                                                      .AFull(fifo_afull_data)  // ufix1
                                                                      );

  assign AXI4_Stream_Master_TVALID =  ~ fifo_empty_data;

  assign const_1 = 32'b00000000000000000000000000000001;

  assign tlast_size_value = write_packet_size_axi4_stream_master - const_1;

  assign reset_TLAST = reg_packet_size_strobe | auto_tlast;

  // Free running, Unsigned Counter
  //  initial value   = 0
  //  step value      = 1
  always @(posedge clk)
    begin : tlast_counter_process
      if (reset == 1'b1) begin
        tlast_counter_out <= 32'b00000000000000000000000000000000;
      end
      else begin
        if (enb) begin
          if (reset_TLAST == 1'b1) begin
            tlast_counter_out <= 32'b00000000000000000000000000000000;
          end
          else if (fifo_push == 1'b1) begin
            tlast_counter_out <= tlast_counter_out + 32'b00000000000000000000000000000001;
          end
        end
      end
    end

  assign tlast_rel_out = tlast_counter_out == tlast_size_value;

  assign auto_tlast = fifo_push & tlast_rel_out;

  Audio_Filter_IP_fifo_TLAST_OUT u_Audio_Filter_IP_fifo_TLAST_OUT_inst (.clk(clk),
                                                                        .reset(reset),
                                                                        .enb(enb),
                                                                        .In(auto_tlast),  // ufix1
                                                                        .Push(fifo_push),  // ufix1
                                                                        .Pop(AXI4_Stream_Master_TREADY),  // ufix1
                                                                        .Out(AXI4_Stream_Master_TLAST)  // ufix1
                                                                        );

  assign auto_ready = internal_ready;

endmodule  // Audio_Filter_IP_axi4_stream_master

